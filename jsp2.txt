Configuration of JSP program
============================

Deployment Directory structure
-------------------------
JspApp1
|
|---Java Resources
|
|---Web Content
	|
	|---ABC.jsp
	|
	|-----WEB-INF
		|
		|----web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

ABC.jsp
------
<center>
	<h1>
		Current Date and Time : <br>
		
		<%
			java.util.Date d=new java.util.Date();
			out.println(d);
		%>
	</h1>
</center>

web.xml
-------
	<web-app>
		<servlet>
			<servlet-name>ABC</servlet-name>
			<jsp-file>/ABC.jsp</jsp-file>
		</servlet>
		<servlet-mapping>
			<servlet-name>ABC</servlet-name>
			<url-pattern>/test</url-pattern>
		</servlet-mapping>
	</web-app>

Request url
----------
	http://localhost:2525/JspApp1/ABC.jsp
	http://localhost:2525/JspApp1/test


How can we hide our web application accessible through file name.It means how can we access our web application accessible only by using url pattern
==========================================================================================
In order to access our web application by using url pattern we need to keep our ABC.jsp file inside "WEB-INF" folder.

Deployment Directory structure
-------------------------
JspApp1
|
|---Java Resources
|
|---Web Content
	|
	|
	|-----WEB-INF
		|
		|----web.xml 
		|
		|----ABC.jsp
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

ABC.jsp
------
<center>
	<h1>
		Current Date and Time : <br>
		
		<%
			java.util.Date d=new java.util.Date();
			out.println(d);
		%>
	</h1>
</center>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
			<servlet-name>ABC</servlet-name>
			<jsp-file>/WEB-INF/ABC.jsp</jsp-file>
		</servlet>
		<servlet-mapping>
			<servlet-name>ABC</servlet-name>
			<url-pattern>/test</url-pattern>
		</servlet-mapping>
  
</web-app>

Request url
----------
	http://localhost:2525/JspApp1/ABC.jsp  --> 404 Error 
	http://localhost:2525/JspApp1/test     --> valid  

JSP life cycle methods
======================
We have three life cycle methods in JSP.

1) _jspInit()
----------------
	It is used for instantitation event.
	This method will execute just before JES class object creation.
	Here JES stands for Java Equivalent Servlet.

2) _jspService()
----------------
	It is used for request arrival event.
	This method will execute when request goes to JSP program.

3) _jspDestroy() 
----------------
	It is used for destruction event.
	This method will execute just before JES class object destruction.


Phases in JSP
==============
We have two phases in JSP.

1) Translation phase 
--------------------
In translation phase our JSP program will convert to JES class.

2) Request Processing phase
---------------------------
In request processing phase our JES class will executed and result will send to browser window as dynamic response.

Diagram: jsp2.1


Q)What is <load-on-startup> and what happens if we enable <load-on-startup> ?

We can enable <load-on-startup> inside web.xml file.

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  		<servlet>
			<servlet-name>ABC</servlet-name>
			<jsp-file>/WEB-INF/ABC.jsp</jsp-file>
			<load-on-startup>1</load-on-startup>	
		</servlet>
		<servlet-mapping>
			<servlet-name>ABC</servlet-name>
			<url-pattern>/test</url-pattern>
		</servlet-mapping>
  
</web-app>

If we enable <load-on-startup> then our servlet container performs translation phase during the server startup or during the deployment of web application.

In short, if we enable <load-on-startup> then our servlet container creates JES class object before we give the request.


JSP Tags/Elements
================
We have following important tags in jsp.

1) Scripting tags
----------------
	i) scriptlet tag 
		ex:
			<%   code here %> 

	ii) expression tag 
		ex:
			<%=  code here %>

	iii)declaration tag 
		ex:
			<%!  code here %>

2) Directive tags
--------------
	i) page directive 
		ex:
			<%@page  attribute=value %>

	ii) include directive 
		ex:
			<%@include  attribute=value %>

3) Standard tags 
---------------
	<jsp:include>
	<jsp:forward>
	<jsp:useBean>
	<jsp:setProperty>
	<jsp:getProperty>
	and etc.

JSP comments
-----------
	<%--  comment here --%> 

i) scriptlet tag
================
It is used to declare java code.

syntax:
-----
	<%  code here %> 

Deployment Directory structure
----------------------------
JspApp2
|
|---Java Resources
|
|---Web Content
	|
	|----form.html
	|
	|----process.jsp
	|
	|------WEB-INF
		|
		|----web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
---------

<form action="process.jsp">
	
	Name: <input type="text" name="t1"/> <br> 
	
	<input type="submit" value="submit"/>
	
</form>

process.jsp
------------
<center>
<h1>
<%
	String name=request.getParameter("t1");
	out.println("Welcome :"+name);
%>
</h1>
</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
---------
	http://localhost:2525/JspApp2/
	




ii) expression tag 
===================
The code which is written in expression tag will return to the output stream of a response.It means we don't need to write out.println() to print/display the data.

Expression tag does not support semicolon.

syntax:
-------
	<%=  code here %>


Deployment Directory structure
----------------------------
JspApp2
|
|---Java Resources
|
|---Web Content
	|
	|----form.html
	|
	|----process.jsp
	|
	|------WEB-INF
		|
		|----web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
---------

<form action="process.jsp">
	
	Name: <input type="text" name="t1"/> <br> 
	
	<input type="submit" value="submit"/>
	
</form>

process.jsp
------------
<center>
<h1>
<%
	String name=request.getParameter("t1");
%>
<%=  "Hello Bro :"+name %>
</h1>
</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
---------
	http://localhost:2525/JspApp2/






















































